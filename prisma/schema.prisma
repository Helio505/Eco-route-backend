// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                Int                @id @default(autoincrement())
  nome              String             @db.VarChar(255)
  login             String             @unique @db.VarChar(255) // Usando email como login
  numeroCelular     String?            @db.VarChar(20)
  senha             String             @db.VarChar(255)
  tipoUsuario       TipoUsuario
  dataCriacao       DateTime           @default(now())
  enderecosUsuarios EnderecosUsuario[]
  coletas           Coleta[]
}

model EnderecosUsuario {
  id          Int     @id @default(autoincrement())
  rua         String  @db.VarChar(255)
  numero      Int?
  complemento String? @db.VarChar(255)
  bairro      String  @db.VarChar(255)
  cidade      String  @db.VarChar(255)
  estado      String  @db.VarChar(255)
  cep         String  @db.VarChar(9)
  usuario     Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  usuarioId   Int
}

model EnderecosLocal {
  id          Int      @id @default(autoincrement())
  rua         String   @db.VarChar(255)
  numero      Int?
  complemento String?  @db.VarChar(255)
  bairro      String   @db.VarChar(255)
  cidade      String   @db.VarChar(255)
  estado      String   @db.VarChar(255)
  cep         String   @db.VarChar(9)
  coletas     Coleta[]
}

model Coleta {
  id         Int            @id @default(autoincrement())
  usuario    Usuario        @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  usuarioId  Int
  dataColeta DateTime       @default(now())
  peso       Float
  volume     Float
  endereco   EnderecosLocal @relation(fields: [enderecoId], references: [id], onDelete: Cascade)
  enderecoId Int
  status     StatusColeta
  tipo       TipoColeta
}

enum TipoUsuario {
  cidadao
  gestor
}

enum StatusColeta {
  pendente
  emRota
  concluida
  cancelada
}

enum TipoColeta {
  papel
  metal
  vidro
  plastico
  lixoEletronico
  lixoOrganico
}
